Command:	~/storm/build/bin/storm --prism cluster.prism --prop cluster.props premium_steady --constants N=128,T=2000,t=20 --prismcompat --exact floats --general:precision 1e-20  --engine portfolio --ddlib sylvan --sylvan:maxmem 6114 --sylvan:threads 4
Wallclock time:	34.610045433044434
Return code:	0
Output:
Storm 1.5.1

Date: Tue Mar 17 14:06:41 2020
Command line arguments: --prism cluster.prism --prop cluster.props premium_steady --constants 'N=128,T=2000,t=20' --prismcompat --exact floats '--general:precision' 1e-20 --engine portfolio --ddlib sylvan '--sylvan:maxmem' 6114 '--sylvan:threads' 4
Current working directory: /

 WARN (GeneralSettings.cpp:110): Setting the precision option with module prefix does not effect all solvers. Consider setting --precision instead of --general:precision.
 WARN (Program.cpp:178): The input model is a CTMC, but uses probabilistic commands like they are used in PRISM. Consider rewriting the commands to use Markovian commands instead.
 WARN (Program.cpp:1264): The model uses synchronizing Markovian commands. This may lead to unexpected verification results, because of unclear semantics.
 WARN (Program.cpp:1264): The model uses synchronizing Markovian commands. This may lead to unexpected verification results, because of unclear semantics.
 WARN (Program.cpp:1264): The model uses synchronizing Markovian commands. This may lead to unexpected verification results, because of unclear semantics.
 WARN (Program.cpp:1264): The model uses synchronizing Markovian commands. This may lead to unexpected verification results, because of unclear semantics.
 WARN (Program.cpp:1264): The model uses synchronizing Markovian commands. This may lead to unexpected verification results, because of unclear semantics.
 WARN (Program.cpp:1264): The model uses synchronizing Markovian commands. This may lead to unexpected verification results, because of unclear semantics.
 WARN (Program.cpp:1264): The model uses synchronizing Markovian commands. This may lead to unexpected verification results, because of unclear semantics.
 WARN (Program.cpp:1264): The model uses synchronizing Markovian commands. This may lead to unexpected verification results, because of unclear semantics.
Time for model input parsing: 0.035s.

 WARN (Program.cpp:1264): The model uses synchronizing Markovian commands. This may lead to unexpected verification results, because of unclear semantics.
 WARN (Program.cpp:1264): The model uses synchronizing Markovian commands. This may lead to unexpected verification results, because of unclear semantics.
 WARN (Program.cpp:1264): The model uses synchronizing Markovian commands. This may lead to unexpected verification results, because of unclear semantics.
Portfolio engine picked the following settings: 
	engine=sparse	 bisimulation=false	 exact=false
 WARN (Program.cpp:1264): The model uses synchronizing Markovian commands. This may lead to unexpected verification results, because of unclear semantics.
 WARN (Program.cpp:1264): The model uses synchronizing Markovian commands. This may lead to unexpected verification results, because of unclear semantics.
Time for model construction: 6.481s.

-------------------------------------------------------------- 
Model type: 	CTMC (sparse)
States: 	597012
Transitions: 	2908192
Reward Models:  none
State Labels: 	3 labels
   * deadlock -> 0 item(s)
   * premium -> 27469 item(s)
   * init -> 1 item(s)
Choice Labels: 	none
-------------------------------------------------------------- 

Model checking property "premium_steady": LRA=? ["premium"] ...
 WARN (LinearEquationSolver.cpp:140): The selected solver does not yield exact results.
 WARN (LinearEquationSolver.cpp:140): The selected solver does not yield exact results.
ERROR (GmmxxLinearEquationSolver.cpp:47): This linear equation solver does not support exact computations. Using unsound methods now...
Result (for initial states): 0.997937878672865652518453
Time for model checking: 27.793s.


############################## Notes ##############################
The tool result '997937878672865652518453/1000000000000000000000000' is tagged as incorrect. The reference result is 'OrderedDict([('lower', 0.9979378910002062), ('upper', 0.9979378911997938)])' (approx. OrderedDict([('lower', 0.9979378910002062), ('upper', 0.9979378911997938)])) which means a relative error of '1.2352813440523342e-08' which is larger than the goal precision '1e-14'.
